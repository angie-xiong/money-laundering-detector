plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.diffplug.spotless' version '6.24.0'
	id 'jacoco'
}

group = 'com.orange.cat'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//	Swagger documents
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'io.swagger.core.v3:swagger-annotations-jakarta:2.2.35'
	implementation 'io.swagger.core.v3:swagger-core:2.2.35'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql:42.7.3'

	// UUID generator
	implementation 'com.fasterxml.uuid:java-uuid-generator:5.1.0'

	//	Unit tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'com.h2database:h2'

}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

spotless {
	java {
		target 'src/main/java/**/*.java', 'src/test/java/**/*.java'
		removeUnusedImports()
		trimTrailingWhitespace()
		importOrder()
		palantirJavaFormat()
		formatAnnotations()
	}
}

jacoco {
	toolVersion = "0.8.13"
	reportsDirectory = layout.buildDirectory.dir('reports/jacoco')
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.5
			}
		}
	}
}

jacocoTestReport {
	dependsOn test
}
